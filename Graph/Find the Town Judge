//We find the indegrees and outdegrees of every node. The node with n-1 indegrees and 0 outdegrees is result. If no such node found return -1;

class Solution {
public:
    int findJudge(int n, vector<vector<int>>& trust) {
        vector<vector<int>> indegree(n+1);
        vector<vector<int>> outdegree(n+1);
        
        for(int i = 0; i < trust.size(); i++){
            indegree[trust[i][1]].push_back(trust[i][0]);
            outdegree[trust[i][0]].push_back(trust[i][1]);
        }
        
        for(int i = 1; i < indegree.size(); i++){
            if(indegree[i].size()== n-1 && outdegree[i].size() == 0) return i;
        }
        
        return -1;
    }
};
