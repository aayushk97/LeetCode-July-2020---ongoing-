//We keep of multiplying the values that will enter the array and then if the product is greater or equal than k we increase k, then number of subarrays are being
//added as each iteration.

class Solution {
public:
    int numSubarrayProductLessThanK(vector<int>& nums, int k) {
        int res = 0;
        int size = 0;
        int prod = 1;
        for(int i = 0, j = 0; j < nums.size(); j++){
            prod = prod * nums[j];
            size++;
            while(i <= j && prod >= k){
                size--;
                prod = prod/nums[i];
                i++;
            }
            
            res += size;
        }
        
        return res;
    }
};
