//we first find the vowels in window of size k. Then find the vowels in consecutive window by add +1 when then next element is vowel and subtracting -1 
//when element exiting the window is a vowel.

class Solution {
public:
    int maxVowels(string s, int k) {
        
        int max1 = 0;
        int max = 0;
        int sum = 0;
        
        bool lastv = false;
        
        for(int i = 0; i < k; i++){
            if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){
                    sum += 1;
            }
        }
        max = sum;
        
        for(int i = k; i < s.length(); i++){
            if(s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] == 'u'){
                
                sum+=1;
            
            }
            
            if(s[i-k] == 'a' || s[i-k] == 'e' || s[i-k] == 'i' || s[i-k] == 'o' || s[i-k] == 'u') sum -= 1;
            
            if(sum > max) max = sum;
            
        }
        
        return max;
    }
    
};
