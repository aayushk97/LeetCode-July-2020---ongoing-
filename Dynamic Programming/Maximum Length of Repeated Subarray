//We check if the nums at index are same and then check if the nums at index i-1 are same, if true then increament the size of longest subarray.
//Keep track of max length and then return that

class Solution {
public:
    int findLength(vector<int>& nums1, vector<int>& nums2) {
        
        vector<vector<int>> dp(nums1.size(), vector<int>(nums2.size(), -1));
       int maxLength = 0; 
        for(int i = 0; i < nums1.size(); i++){
            for(int j = 0; j < nums2.size(); j++){
                if(nums1[i] == nums2[j]){
                    if(i > 0 && j > 0 && nums1[i-1] == nums2[j-1]){
                        dp[i][j] = dp[i-1][j-1] + 1;
                        
                    }else{
                        dp[i][j] = 1;
                    }    
                }
                
                maxLength = max(maxLength, dp[i][j]);
                
            }
        }
        
        return maxLength;
        
    }
};
