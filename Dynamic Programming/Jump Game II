//At each stop figure out how many steps above you can go, and then add the no of step sit takes to reach this stop to it. 
//Can be done using Greddy also.

class Solution {
public:
    int jump(vector<int>& nums) {
        
        vector<int> jumps(nums.size(), INT_MAX);
        jumps[0] = 0;
        
        for(int i = 0; i < nums.size(); i++){
            int k = min(nums.size()-1, nums[i]+i);
            
            for(int j = i+1; j <= k; j++){
                
                jumps[j] = min(jumps[j], jumps[i]+1);
            }
        }
        
        return jumps[jumps.size()-1];
    }
    
    int min(int a, int b){
       if(a < b) return a;
        else return b;
    }
};
