class Solution {
public:
    bool isInterleave(string s1, string s2, string s3) {
        
        if(s1.length()+s2.length() != s3.length()) return false;
        
        vector<vector<int>> t1(s1.length()+1, vector<int>(s2.length()+1, 0));
        
        //when both the strings are empty then return true as length is same so s3 is also empty
        t1[0][0] = true;
        
        //when only s1 or s2 is present and other is empty
        for(int i = 1; i <= s1.length(); i++) t1[i][0] = t1[i-1][0] && (s1[i-1] == s3[i-1]);
        for(int j = 1; j <= s2.length(); j++) t1[0][j] = t1[0][j-1] && (s2[j-1] == s3[j-1]);
        
        //when there is interleaving
        for(int i = 1; i <= s1.length(); i++){
            for(int j = 1; j <= s2.length(); j++){
                t1[i][j] = (t1[i-1][j] && (s1[i-1] == s3[i+j-1])) || (t1[i][j-1] && (s2[j-1] == s3[i+j-1]));
            }
        }
        
        return t1[s1.length()][s2.length()];
    }
};
