//We first identify 1 length palindomes which is no of chars.
//Then find no of 2 letter palindromes which is same letter repeated side by side.
//The we find for 3 letter, we see if the word from letter next to this i and letter before j form a palidrome and the char
// at i and j are equal. If yes, then increase count otherwise go to next chars.

class Solution {
public:
    int countSubstrings(string s) {
        vector<vector<int>> ps(s.length(), vector<int>(s.length(), 0));
        
        int count = 0;
        
        for(int i = 0; i < s.length(); i++){
            ps[i][i] = 1;
            count++;
        } 
        
        for(int i = 1; i < s.length(); i++){
            if(s[i] == s[i-1]){
                ps[i-1][i] = 1;
                count++;
            }   
        }
        cout<<count;
        for(int l = 3; l <= s.length(); l++){
            //cout<<s.length()<<"ehre";
            for(int i = 0, j = i+l-1; j < s.length(); i++, j++){
               // cout<<i<<j<<endl;
                if(ps[i+1][j-1] && s[i] == s[j]){
                    ps[i][j] = 1;
                    count++;
                }
                
            }
        }
        
        return count;
    }
};
