//According to the ques we see if the contraint holds on two types of cases. If yes, then we increment size of subarray of the contraint that holds and reset the
//size of other. 
class Solution {
public:
    int maxTurbulenceSize(vector<int>& arr) {
        
        int maxSize = 1;
        int caseOne = 1, caseTwo = 1;
        
        int n = arr.size();
        for(int i = 0; i < n-1; i++){
            
            if(i % 2 == 1){
                if(arr[i] > arr[i+1]) caseOne += 1;
                else caseOne = 1;
                
                if(arr[i] < arr[i+1]) caseTwo += 1;
                else caseTwo = 1;
            }else{
                if(arr[i] < arr[i+1]) caseOne += 1;
                else caseOne = 1;
                
                if(arr[i] > arr[i+1]) caseTwo += 1;
                else caseTwo = 1;
            }
            
            maxSize = max(maxSize, max(caseOne, caseTwo));
            
        }
        
        return maxSize;
    }
};
