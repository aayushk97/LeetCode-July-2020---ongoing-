//For each triplet since we are giving the middle value and we want to get max coins. So, we sort the coins and always form tripplets in such a way that
//the highest coin goes to Alice, lowest to bob and middle to us. So we create tripplet by taking the last 2 values and 1st value from sorted array.
//Ex: [2,4,1,2,7,8] we get: [1, 2, 2, 4, 7, 8] then we make triplets (1, 7, 8) and (2, 2, 4) so we get profit of 7+2 = 9

class Solution {
public:
    int maxCoins(vector<int>& piles) {
        sort(piles.begin(), piles.end());
        
        int sum = 0;
        for(int i = piles.size()-2, j = 0; j < piles.size()/3; i-=2, j++){
            
            sum += piles[i];
            
        }
        
        return sum;
    }
};
