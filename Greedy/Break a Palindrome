//We first see if the char is just one letter. If yes, then we return "" as no way we can convert it to non palindrome. Now, we replace the first non a to a if
//the length is even otherwise we skip the middle char as string of odd length we can have any char as middle and it would still be a plandrome.
//We change the last char to b if all the chars is 'a'.

class Solution {
public:
    string breakPalindrome(string pal) {
        int n = pal.length();
        for (int i = 0; i < n / 2; i++) {
            if (pal[i] != 'a') 
            {
                pal[i] = 'a';
                return pal ;
            }
        }
        pal[n - 1] = 'b' ;
        return n < 2 ? "" : pal ;
    }
};
