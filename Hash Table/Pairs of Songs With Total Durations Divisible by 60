//We find the first number if it is in range and then second number which will add up to multiple of 60. Then we store it in a map. and return the total count;

class Solution {
public:
    int numPairsDivisibleBy60(vector<int>& time) {
        
        unordered_map<int, int> freq;
        
        int count = 0;
        
        for(int i = 0; i < time.size(); i++){
            int a = time[i]%60;
            
            //we place modulo below just so if time[i] is 60 and then a will become 0then 60-0 is 60 which is outside the range of 0,59
            
            int b = (60 - a)%60;
            if(freq.find(b) != freq.end()) count += freq[b];
            
            freq[a]++;
        }
        
        return count;
        
    }
};
