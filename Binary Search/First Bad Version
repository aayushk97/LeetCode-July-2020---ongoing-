//since the version is bad from an index k to n. We have to find this k, if mid is bad then we find from 0 to mid-1 else we find from mid+1 to n.

class Solution {
public:
    int firstBadVersion(int n) {
        int i = 1, j = n;
        
        while(i <= j){
            int mid = i + (j-i)/2;
            
            if(isBadVersion(mid)) j = mid - 1;
            else i = mid + 1;
            
        }
        
        return i;
    }
};
