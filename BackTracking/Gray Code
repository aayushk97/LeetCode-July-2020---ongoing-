//to produce gray code we first take reflection of last bits and add 0's and 1's at front to n-1 to get gray code of n.

class Solution {
public:
    vector<int> grayCode(int n) {
        if(n == 1) return {0, 1};
        
        vector<int> rest = grayCode(n-1);
        vector<int> newCode;
        
        for(int i = 0; i < rest.size(); i++) newCode.push_back(rest[i]);
        
        for(int j = rest.size()-1; j >= 0; j--){
            int a = rest[j];
            a = 1 << (n-1) | a;
            newCode.push_back(a);
        }
      return newCode;  
    }
};
