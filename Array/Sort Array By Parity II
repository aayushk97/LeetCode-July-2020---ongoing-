//We find 1st even no thats not in place then find 1st odd number not in place then swap them.

class Solution {
public:
    vector<int> sortArrayByParityII(vector<int>& A) {
        
        for(int i = 0, j = 1; i < A.size() && j < A.size(); i = i + 2){
            //while its even at even index we jump 
            while(i < A.size() && A[i] % 2 == 0){
                i = i + 2;
            }
            
            while(j < A.size() && A[j] % 2 != 0){
                j = j + 2;
            }
            
            if(i < A.size() && j < A.size()){
                int temp = A[i];
                A[i] = A[j];
                A[j] = temp;
                
            }
        }
        return A;
    }
};
