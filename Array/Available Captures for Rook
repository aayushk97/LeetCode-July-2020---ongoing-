class Solution {
public:
    int numRookCaptures(vector<vector<char>>& board) {
        int m = 0, n = 0;
        int count = 0;
        bool found = false;
        for(int i = 0; i < board[0].size(); i++){
            for(int j = 0; j < board.size(); j++){
                
                if(board[i][j] == 'R'){
                    m = i;
                    n = j;
                    found = true;
                    break;
                    
                }
                
            }
            if(found == true) break;
            
        }
        
        //cout<<m<<n;
        found = false;
        for(int i = m; i >= 0; i--){
            if(board[i][n] == 'B') break;
            
            if(board[i][n] == 'p'){
                count += 1;
                found = true;                
            }
            if(found == true) break;
            
        }
        
        found = false;
        for(int i = m; i < board[0].size(); i++){
            if(board[i][n] == 'B') break;
            if(board[i][n] == 'p'){
                count += 1;
                found = true;                
            }
            if(found == true) break;
            
        }
        
        found = false;
        for(int i = n; i >= 0; i--){
            if(board[m][i] == 'B') break;
            if(board[m][i] == 'p'){
                count += 1;
                found = true;                
            }
            if(found == true) break;
            
        }
        
        found = false;
        for(int i = n; i < board.size(); i++){
            if(board[m][i] == 'B') break;
            if(board[m][i] == 'p'){
                count += 1;
                found = true;                
            }
            if(found == true) break;
            
        }
        
        return count;
        
    }
};
