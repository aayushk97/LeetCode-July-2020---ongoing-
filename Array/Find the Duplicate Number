//https://leetcode.com/problems/find-the-duplicate-number/discuss/72846/My-easy-understood-solution-with-O(n)-time-and-O(1)-space-without-modifying-the-array.-With-clear-explanation.


class Solution {
public:
    int findDuplicate(vector<int>& nums) {
            
        if(nums.size() == 1) return -1;
        if(nums.size() == 2) return nums[0];
        
            int slow = nums[0];
            int fast = nums[nums[0]];
            
            while(slow != fast){
                slow = nums[slow];
                fast = nums[nums[fast]];
            }
            
            
            slow = 0;
            
            while(slow != fast){
                slow = nums[slow];
                fast = nums[fast];
            }
            
            return slow;
            
        
    }
};
