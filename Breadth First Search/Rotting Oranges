class Solution {
    int count = 0;
public:
    int orangesRotting(vector<vector<int>>& grid) {
        bool flag = false;
        
        vector<vector<int>> copyGrid;
        
        for(int i = 0; i < grid.size(); i++){
            vector<int> gridx;
            for(int j = 0; j < grid[0].size(); j++){
                gridx.push_back(grid[i][j]);
            }
            copyGrid.push_back(gridx);
            gridx.clear();
        }
        
        
        if(grid.size()>=2 && grid[0].size() >= 2){
            for(int i = 0; i < grid.size(); i++){
            for(int j = 0; j < grid[0].size(); j++){
                
                if(grid[i][j] == 2) copyGrid[i][j] = 2;
                if(grid[i][j] == 1){
                    if(i > 0 && i + 1 < grid.size()){
                    
                        if(grid[i-1][j] == 2 || grid[i+1][j] == 2){
                          copyGrid[i][j] = 2;
                            flag = true;
                        } 
                    }
                    
                    if(j > 0 && j + 1 < grid[0].size()){
                        if(grid[i][j-1] == 2 || grid[i][j+1] == 2){
                          copyGrid[i][j] = 2;
                            flag = true;
                        } 
                    }
                    
                    if( i == 0 ){
                        if(grid[i+1][j] == 2){
                          copyGrid[i][j] = 2;
                            flag = true;
                        } 
                    }
                    
                    if( j == 0 ){
                        if(grid[i][j+1] == 2){
                            copyGrid[i][j] = 2;
                            flag = true;
                        }
                    }
                    
                    if(i + 1 == grid.size()){
                        if(grid[i-1][j] == 2){
                            copyGrid[i][j] = 2;
                            flag = true;
                        }
                    }
                    
                    if(j+1 == grid[0].size()){
                        if(grid[i][j-1] == 2){
                            copyGrid[i][j] = 2;
                            flag = true;
                        }
                    }
                }
            }      
            }
        }
        
        if(grid.size()==1 && grid[0].size() == 1){
            if(grid[0][0] == 1 ) return -1;
            if(grid[0][0] == 2 ||grid[0][0] == 0) return count;
        }
        
        if(grid.size() == 1 && grid[0].size() > 1){
            for(int j = 0; j < grid[0].size(); j++){
                if(grid[0][j] == 1){
                    if(j > 0 && j+1 < grid[0].size()){
                        if(grid[0][j-1] == 2 || grid[0][j+1] == 2){
                            copyGrid[0][j] = 2;
                            flag = true;
                        }
                    }
                    
                    if( j == 0 ){
                        if(grid[0][j+1] == 2 ){
                            copyGrid[0][j] = 2;
                            flag = true;
                        }
                    }
                    
                    if( j + 1 == grid[0].size()){
                        if(grid[0][j-1] == 2){
                            copyGrid[0][j] = 2;
                            flag = true;
                        }
                    }
                }
                if(grid[0][j] == 2){
                    copyGrid[0][j] = 2;
                }
                
                
            }
        }
        
        if(grid[0].size() == 1 && grid.size() > 1){
            for(int i = 0; i < grid.size(); i++){
                if(grid[i][0] == 1){
                    if(i > 0 && i+1 < grid.size()){
                        if(grid[i+1][0] == 2 || grid[i-1][0] == 2){
                            copyGrid[i][0] = 2;
                            flag = true;
                        }
                    }
                    
                    if( i == 0 ){
                        if(grid[i+1][0] == 2 ){
                            copyGrid[i][0] = 2;
                            flag = true;
                        }
                    }
                    
                    if( i + 1 == grid.size()){
                        if(grid[i-1][0] == 2){
                            copyGrid[i][0] = 2;
                            flag = true;
                        }
                    }
                }
                if(grid[i][0] == 2){
                    copyGrid[i][0] = 2;
                }
                
                
                
            }
        }
        
        
        if(flag){
            
            int a = orangesRotting(copyGrid);
            if(a!= -1) return count+=1;
            if(a == -1) return -1;
        }
        
        if(!flag){
            for(int i = 0; i < copyGrid.size(); i++){
                for(int j = 0; j < copyGrid[0].size(); j++)
                    if(copyGrid[i][j] == 1) return -1;
            }
            
        }
        
        return count;
        
    }
};
