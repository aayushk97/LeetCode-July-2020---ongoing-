class Solution {
public:
    int maxHeight = 0;
    int sum = 0;
    int deepestLeavesSum(TreeNode* root) {
        if(root && !root -> left && !root -> right) return root -> val;
        
        leavesSum(root, 0);
        return sum;
    }
    
    void leavesSum(TreeNode* root, int depth){
        if(root && !root -> left && !root -> right){
            
            if(maxHeight < depth){
                sum = root -> val;
                maxHeight = depth;
                
            } 
            else if(maxHeight == depth){
                sum += root -> val;
                
            }
            
            return;
        }
        
        if(root -> left) leavesSum(root -> left, depth+1);
        if(root -> right) leavesSum(root -> right, depth+1);
        
        
    }
};
