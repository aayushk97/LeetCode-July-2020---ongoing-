//A better method would be to just have lines 12 -16 and for rest return root as temp 
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(!root) return NULL;
        TreeNode* temp;
        if((root -> val > p -> val && root -> val < q -> val) || (root -> val < p -> val && root -> val > q -> val))
            return root;
        
        if(root -> val == p -> val || root ->val == q -> val)return root;
        
        if(p -> val < root -> val && q -> val < root -> val){
            temp = lowestCommonAncestor(root -> left, p, q);
        }else{
            temp = lowestCommonAncestor(root -> right, p, q);
        }
        return temp;
    }
};
