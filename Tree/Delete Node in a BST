
class Solution {
public:
    TreeNode* inOrderSuccessor(TreeNode* root){
        TreeNode* curr = root;
        
        while(curr && curr -> left) curr = curr -> left;
        
        return curr;
    }
    TreeNode* deleteNode(TreeNode* root, int key) {
        if(!root) return NULL;
        
        if(root -> val > key) root -> left = deleteNode(root -> left, key);
        
        else if(root -> val < key) root -> right = deleteNode(root -> right, key);
        
        else if(root -> val == key){
            if(!root -> left){
                
                return root -> right;

            }
            
            else if(!root -> right){
                
                return root -> left;
            }
            
            TreeNode* temp = inOrderSuccessor(root -> right);
            root -> val = temp -> val;
            root -> right = deleteNode( root -> right, temp -> val);
        }
        
        return root;
    }
};
