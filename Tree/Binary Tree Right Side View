//Here since we need the right side view of tree we first get the right side nodes first then traverse the left subtree and inset only if the depth of this 
//node is greater than last node inserted inside the vector.

class Solution {
public:
    vector<int> rightSideView(TreeNode* root) {
        
        vector<int> res;
        
        getRSV(root, res, 0);
        
        return res;
        
    }
    
    void getRSV(TreeNode* root, vector<int>& res, int h){
        if(!root) return;
        
        
        
        if(h >= res.size()) res.push_back(root -> val);
        getRSV(root -> right, res, h+1);
        getRSV(root -> left, res, h+1);
    }
    
    
};
