class Solution {
public:
    vector<int> preorder(Node* root) {
        vector<int> preOrder; 
        stack<Node*> nodes;
        nodes.push(root);
        
        while(!nodes.empty()){
            Node* curr = nodes.top();
            nodes.pop();
            
            if(curr != NULL){
                preOrder.push_back(curr -> val);
                
                for(int i = curr -> children.size() - 1; i >= 0; i--){
                    nodes.push(curr-> children[i]);
                }
            }
        }
        return preOrder;
    }
};


//Recursive

class Solution {
public:
    vector<int> preorder(Node* root) {
        vector<int> p;
        
        preorderNT(root, p);
        return p;
    }
    
    void preorderNT(Node* root, vector<int>& p){
        if(!root) return;
        
        p.push_back(root -> val);
        
        for(int i = 0; i < root -> children.size(); i++) preorderNT(root -> children[i], p);
    }
};
