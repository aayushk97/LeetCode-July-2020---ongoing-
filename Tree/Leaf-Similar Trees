class Solution {
public:
    bool leafSimilar(TreeNode* root1, TreeNode* root2) {
        
        vector<int> leavesOne;
        findLeaves(root1, leavesOne);
        vector<int> leavesTwo;
        findLeaves(root2, leavesTwo);
        cout<<leavesOne.size()<<": " << leavesTwo.size()<<": ";
        if(leavesOne.size() != leavesTwo.size()) return false;
        
        for(int i = 0 ; i < leavesOne.size(); i++){
            if(leavesOne[i] != leavesTwo[i]){
                return false;
            }
        }
        return true;
    }
    
    vector<int> findLeaves(TreeNode* root, vector<int>& leaves){
        
        if(!root) return leaves;
        if(!root -> left && !root-> right) leaves.push_back(root -> val);
        
        if(root -> left) leaves = findLeaves(root -> left, leaves);
        if(root -> right) leaves = findLeaves(root -> right, leaves);
        
        return leaves;
    }
};
