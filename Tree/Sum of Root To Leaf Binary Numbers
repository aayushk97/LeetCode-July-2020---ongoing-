class Solution {
    
public:
    int sum = 0;
    vector<int> path;
    int sumRootToLeaf(TreeNode* root) {
       convertTreeToBinary(root); 
       return sum; 
    }
    
    void convertTreeToBinary(TreeNode* root){
        if(!root) return;
        path.push_back(root -> val);
        
        if(!root -> left && !root -> right) {
            int decimal = convertToDecimal(path);
            sum += decimal;
        }else{
            convertTreeToBinary(root -> left);
            convertTreeToBinary(root -> right);
        }
        
        path.pop_back();
    }
    
    int convertToDecimal(vector<int> path){
        int dec = path[0];
        for(int i = 1; i < path.size(); i++){
            dec = dec*2 + path[i];
        }
        cout<<dec<<";";
        return dec;
    }
};
