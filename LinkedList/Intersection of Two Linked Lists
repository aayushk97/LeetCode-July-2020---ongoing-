class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        ListNode* temp1 = headA;
        ListNode* temp2 = headB;
        
        if(!temp1 || !temp2) return NULL;
        
        int length1 = 0;
        int length2 = 0;
        //Find Length of List A
        while(temp1){
            length1++;
            temp1 = temp1 -> next;
        }
        //Find Length of List B
        while(temp2){
            length2++;
            temp2 = temp2 -> next;
        }
        
        //Find Difference between Lengths and make them equidistant from joining point
        int diff = 0; 
        temp1 = headA;
        temp2 = headB;
        
        if(length2>length1) {
            diff = length2 - length1;
            while(diff>0){
                temp2 = temp2 -> next;
                diff--;
            }
        }
        
        if(length1>length2) {
            diff = length1 - length2;
            while(diff>0){
                temp1 = temp1 -> next;
                diff--;
            }
        }
        
        //Traverse to Mid pint
        while(temp1 && temp2){
            if(temp1 == temp2)
                return temp1;
            temp1 = temp1 -> next ;
            temp2 = temp2 -> next ;
            
        }
        
        return NULL;
    }
};
